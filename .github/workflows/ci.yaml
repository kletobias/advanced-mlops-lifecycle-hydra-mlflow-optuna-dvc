# .github/workflows/ci.yaml
name: CI
on: [push, pull_request]

permissions:
  id-token: write
  contents: read

# ------------------------------------------------------------- #
# 1) Lint, unit tests & coverage on 3 Python versions           #
# ------------------------------------------------------------- #
jobs:
  quality:
    name: quality-${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true          # show all version failures
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip wheels
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: pip-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install CI dependencies
        run: |
          python -m pip install --upgrade pip
          pip install \
            "dvc[s3]" \
            pre-commit \
            ruff \
            black \
            isort \
            mypy \
            pytest \
            pytest-cov \
            coverage[toml]

      # --- Static analysis & formatting ------------------------------------
      - name: Run pre‑commit hooks
        run: pre-commit run --all-files --color never

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::513065063624:role/GithubOIDCRole
          aws-region: eu-central-1

      # --- Pull the latest tracked data ------------------------------------
      - name: Pull data / params
        run: dvc pull --verbose --jobs 4

      # --- Tests + coverage -------------------------------------------------
      # - name: Pytest + coverage
      #   run: pytest -q --cov=src --cov-report=xml

      # - uses: codecov/codecov-action@v4
      #   with:
      #     files: coverage.xml

      # --- Publish MLflow runs for reviewers -------------------------------
      - uses: actions/upload-artifact@v4
        with:
          name: mlruns-${{ matrix.python-version }}
          path: mlruns
          retention-days: 7

# ------------------------------------------------------------- #
# 2) Full pipeline on self‑hosted GPU (runs only if quality OK) #
# ------------------------------------------------------------- #
  gpu-pipeline:
    needs: quality
    runs-on: self-hosted-gpu   # label on your on‑prem runner
    permissions:
      id-token: write          # for OIDC
      contents: read
    environment: production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'   # pin one version for prod pipeline

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install "dvc[s3]"

      - uses: iterative/setup-dvc@v1

      - name: Assume AWS role via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::513065063624:role/GithubOIDCRole
          aws-region: eu-central-1

      - name: Reproduce DVC pipeline
        run: dvc repro --pull -P

      - name: Push artefacts to S3
        run: |
          dvc push --verbose --jobs 4
          aws s3 sync mlruns s3://ghcicd/mlruns --delete

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            data/**
            models/**
            logs/**
