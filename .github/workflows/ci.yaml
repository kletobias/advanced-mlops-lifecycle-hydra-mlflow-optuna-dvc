name: CI

on: [push, pull_request]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - uses: pre-commit/action@v3.0.0

      - name: Install deps
        run: |
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Set up DVC
        uses: iterative/setup-dvc@v1

      - name: Cache DVC data
        uses: actions/cache@v4
        with:
          path: .dvc/cache
          key: dvc-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('dvc.lock') }}
          restore-keys: |
            dvc-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Pull data/params
        run: dvc pull --verbose --jobs 4

      - name: Flake8
        run: flake8 .

      - name: Pytest + coverage
        run: pytest -q --cov=src --cov-report=xml

      - uses: codecov/codecov-action@v4
        with:
          files: coverage.xml

      - name: Upload MLflow artefacts
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlruns
          retention-days: 5

  gpu-pipeline:
    needs: lint-test
    runs-on: self-hosted-gpu
    permissions:
      id-token: write
      contents: read
    environment: production
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.10

      - uses: iterative/setup-dvc@v1

      - name: Assume AWS role via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam:123456789012:role/GithubOIDCRole
          aws-region: us-east-1

      - name: Reproduce DVC pipeline
        run: dvc repro --pull -P

      - name: Push artefacts to S3
        run: |
          aws s3 sync mlruns s3://bucket/mlruns --delete

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            data/**
            models/**
            
