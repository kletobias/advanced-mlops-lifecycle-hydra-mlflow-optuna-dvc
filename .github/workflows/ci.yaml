name: CI
on: [push, pull_request]

jobs:
# --------------------------------------------------------------------- #
# 1) lint + tests                                                       #
# --------------------------------------------------------------------- #
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.lock.yml
          environment-name: ci
          cache-downloads: true
          cache-environment: true

      # run the same hooks as locally
      - name: preâ€‘commit (all files)
        run: micromamba run -n ci pre-commit run --all-files --color never

      - uses: iterative/setup-dvc@v1   # dvc in env already, adds credentials helpers

      - name: Cache DVC data
        uses: actions/cache@v4
        with:
          path: .dvc/cache
          key: dvc-${{ runner.os }}-${{ hashFiles('dvc.lock') }}
          restore-keys: dvc-${{ runner.os }}-

      - name: Pull data / params
        run: micromamba run -n ci dvc pull --verbose --jobs 4

      - name: Pytest + coverage
        run: micromamba run -n ci pytest -q --cov=src --cov-report=xml

      - uses: codecov/codecov-action@v4
        with:
          files: coverage.xml

      - name: Upload MLflow artefacts
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlruns
          retention-days: 5

# --------------------------------------------------------------------- #
# 2) GPU pipeline                                                       #
# --------------------------------------------------------------------- #
  gpu-pipeline:
    needs: lint-test
    runs-on: self-hosted-gpu
    permissions:
      id-token: write
      contents: read
    environment: production
    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.lock.yml
          environment-name: ci
          cache-downloads: true
          cache-environment: true

      - uses: iterative/setup-dvc@v1

      - name: Assume AWS role via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GithubOIDCRole
          aws-region: eu-central-1

      - name: Reproduce DVC pipeline
        run: micromamba run -n ci dvc repro --pull -P

      - name: Push artefacts to S3
        run: |
          micromamba run -n ci dvc push --verbose --jobs 4
          aws s3 sync mlruns s3://bucket/mlruns --delete

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            data/**
            models/**
            logs/**
